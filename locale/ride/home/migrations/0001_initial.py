# Generated by Django 2.2.2 on 2019-06-25 16:01

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('country_of_residence', models.IntegerField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('photo_url', models.CharField(blank=True, max_length=255, null=True)),
                ('removed', models.IntegerField(default=0)),
                ('user_type', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_app_access', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_lat', models.CharField(blank=True, max_length=50, null=True)),
                ('to_long', models.CharField(blank=True, max_length=50, null=True)),
                ('desc', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DestCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Dest')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_lat', models.CharField(blank=True, max_length=50, null=True)),
                ('from_long', models.CharField(blank=True, max_length=50, null=True)),
                ('desc', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(choices=[(1, 'MICRO'), (2, 'MINI'), (3, 'SEDAN'), (4, 'SUV')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='SourceCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=50, null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Source')),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package', models.CharField(choices=[(1, '4HRS AND 40KMS'), (2, '8HRS AND 80KMS'), (3, '6HRS AND 60KMS'), (4, '10HRS AND 100KMS'), (5, '5HRS AND 50KMS'), (6, '3HRS AND 30KMS'), (7, '12HRS AND 120KMS')], max_length=2)),
                ('travel_type', models.CharField(choices=[(1, 'LONG DISTANCE'), (2, 'POINT TO POINT'), (3, 'HOURLY RENTAL')], max_length=2)),
                ('booking_created', models.DateTimeField(auto_now_add=True)),
                ('is_canceled', models.IntegerField(default=0)),
                ('is_booked_mobile', models.IntegerField(default=0)),
                ('from_time', models.DateTimeField(blank=True, default=datetime.datetime(2019, 6, 25, 16, 1, 34, 817599), null=True)),
                ('to_time', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.IntegerField(default=0)),
                ('from_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Source')),
                ('from_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.SourceCity')),
                ('to_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Dest')),
                ('to_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.DestCity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Vehicle')),
            ],
        ),
    ]
